<Window x:Class="BaseballScoreboard.ScoreboardView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        xmlns:local="clr-namespace:BaseballScoreboard"
        Title="Baseball Scoreboard" Height="256" Width="512" Icon="/Assets/Icon.ico">
    <Window.DataContext>
        <local:ScoreboardViewModel/>
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Key="Up" Command="{Binding IncreaseInningCounter}"/>
        <KeyBinding Key="Down" Command="{Binding DecreaseInningCounter}"/>
        <KeyBinding Key="D1" Command="{Binding IncreaseTeam1Score}"/>
        <KeyBinding Key="Q" Command="{Binding DecreaseTeam1Score}"/>
        <KeyBinding Key="D2" Command="{Binding IncreaseTeam2Score}"/>
        <KeyBinding Key="W" Command="{Binding DecreaseTeam2Score}"/>
        <KeyBinding Key="Z" Command="{Binding ToggleThirdBase}"/>
        <KeyBinding Key="X" Command="{Binding ToggleSecondBase}"/>
        <KeyBinding Key="C" Command="{Binding ToggleFirstBase}"/>
    </Window.InputBindings>
    <Window.Resources>
        <Style x:Key="TextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="jf-openhuninn-1.1"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
    </Window.Resources>
    <Grid Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>
        <Image Name="Team1" Grid.Row="1" Grid.Column="0"
               Drop="TeamLogo_Drop" AllowDrop="True" Source="/Assets/Team1LogoDropPrompt.png"/>
        <Image Name="Team2" Grid.Row="2" Grid.Column="0"
               Drop="TeamLogo_Drop" AllowDrop="True" Source="/Assets/Team2LogoDropPrompt.png"/>
        <Viewbox Grid.Row="0" Grid.Column="0" StretchDirection="Both" Stretch="Uniform"
                 HorizontalAlignment="Right">
            <TextBlock Name="InningCounter" Text="{Binding Inning}" Style="{StaticResource TextStyle}"/>
        </Viewbox>
        <Image Name="HalfInningCounter" Grid.Row="0" Grid.Column="1"
               HorizontalAlignment="Center" VerticalAlignment="Center">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Source" Value="/Assets/TopInningArrow.png"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsTopInning}" Value="True">
                            <Setter Property="Source" Value="/Assets/TopInningArrow.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsTopInning}" Value="False">
                            <Setter Property="Source" Value="/Assets/BottomInningArrow.png"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
        <Viewbox Grid.Row="1" Grid.Column="1" StretchDirection="Both" Stretch="Uniform">
            <TextBlock Name="Team1Score" Text="{Binding Team1Score}" Style="{StaticResource TextStyle}"/>
        </Viewbox>
        <Viewbox Grid.Row="2" Grid.Column="1" StretchDirection="Both" Stretch="Uniform">
            <TextBlock Name="Team2Score" Text="{Binding Team2Score}" Style="{StaticResource TextStyle}"/>
        </Viewbox>
        <Grid Name="BasesDisplay" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Image Name="FirstBase" Grid.Row="1"
                   HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/Assets/EmptyBase.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsFirstBaseOccupied}" Value="True">
                                    <Setter Property="Source" Value="/Assets/OccupiedBase.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFirstBaseOccupied}" Value="False">
                                    <Setter Property="Source" Value="/Assets/EmptyBase.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Image Name="SecondBase" Grid.Row="0"
                   HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/Assets/EmptyBase.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSecondBaseOccupied}" Value="True">
                                    <Setter Property="Source" Value="/Assets/OccupiedBase.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSecondBaseOccupied}" Value="False">
                                    <Setter Property="Source" Value="/Assets/EmptyBase.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Grid>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Image Name="ThirdBase" Grid.Row="1"
                   HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/Assets/EmptyBase.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsThirdBaseOccupied}" Value="True">
                                    <Setter Property="Source" Value="/Assets/OccupiedBase.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsThirdBaseOccupied}" Value="False">
                                    <Setter Property="Source" Value="/Assets/EmptyBase.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Grid>
        </Grid>
    </Grid>
</Window>
